# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  test:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.11

      # Specify service dependencies here if necessary

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test

  release:
    docker:
      - image: circleci/node:8.11
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install
      - run: yarn build:lib
      - run: npx semantic-release

  build_deploy:
    docker:
      - image: circleci/python:latest-node-browsers
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: yarn install
      - run: yarn build:docs
      - run: sudo pip install awscli
      - run: ./deploy-s3.sh

  release_deploy:
    docker:
      - image: circleci/python:latest-node-browsers
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: yarn install
      - run: yarn build:lib
      - run: npx semantic-release
      - run: yarn build:docs
      - run: sudo pip install awscli
      - run: ./deploy-s3.sh

workflows:
  version: 2
  test:
    jobs:
      - test

  daily_release:
    # Run the test jobs first, then the release only when all the test jobs are successful
    triggers:
      - schedule:
          cron: "0 5 * * 1,2,3,4,5"
          filters:
            branches:
              only:
                - master
    jobs:
      - test
      - release_deploy:
          requires:
            - test
          context: Collab UI Bot
